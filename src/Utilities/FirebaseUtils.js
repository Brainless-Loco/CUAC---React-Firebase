import { fireAuth, firebaseStorage, firestore } from "../Firebase";
import { CollectionNames, Status } from './Constants';

//                              collection_name: string
export const getCollection = async (collection_name) => {
    const collection = firestore.collection(collection_name);
    const data = await collection.get();

    const items = [];

    data.docs.forEach(item => {
        items.push(item.data());
    })

    return items;
}

//                                  collection_name: string, start_at: int, end_at: int
export const getRangedItems = async (collection_name, start_at, end_at) => {
    // CODE
}

//                                                  object: any
/*                  object interface, {firstName: string, lastName: string, 
                                        department: string, bloodGroup: string, studentID: number, currentAddress: string
                                        imageLink: string, phone: string, session: string, trxID: string} */
export const postPendingMemberInformation = async (object) => {
    const collRef = firestore.collection(CollectionNames.pending_members);
    const sizeRef = firestore.collection(CollectionNames.collection_counter).doc(CollectionNames.pending_members);
    let size;

    // Get current size of collection
    sizeRef.get()
        .then((doc) => {
            if(doc.exists) {
                size = doc.data().size;
                console.log('Collection size before upload: ' + size);

                // Update the size of the collection
                sizeRef.update({size: size + 1})
                    .then(() => {

                        // Push information gathered from the form into the collection
                        // Add method pushes with a autogenerated seed/key
                        collRef.add(object)
                        .then(() => {
                            alert('Successfully pushed to firestore.');
                            
                            window.location.reload();
                        })
                        .catch((error) => {
                            console.log(error);
                        })
                    })
                    .catch((error) => {
                        console.log(error);
                    })
            } else console.log('Size metadata not found');
        })
        .catch((error) => {
            console.log(error);
        });
}

export const login = async (email, password) => {
    let status = Status.OK;
    let error_message;
    
    await fireAuth.signInWithEmailAndPassword(email, password)
        .then((result) => {
            status = Status.OK;
        })
        .catch((error) => {
            status = Status.Err;
            error_message = error;
        });
    
    return {status: status, error: error_message};
}